version: 2.1

orbs:
  php: circleci/php@1

jobs:
  test-php:
    docker:
      - image: cimg/php:8.1-node
      - image: mysql:8.0
        name: mysql
        environment:
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: root
    steps:
      - checkout
      - php/install-packages
      - run:
          name: Setup environment file
          command: cp .env.example .env
      - run:
          name: Configure database
          command: |
            echo "DB_CONNECTION=mysql" >> .env
            echo "DB_HOST=mysql" >> .env
            echo "DB_PORT=3306" >> .env
            echo "DB_DATABASE=laravel_test" >> .env
            echo "DB_USERNAME=user" >> .env
            echo "DB_PASSWORD=password" >> .env
      - run:
          name: Generate application key
          command: php artisan key:generate
      - run:
          name: Run migrations
          command: php artisan migrate --force
      - run:
          name: Run tests
          command: ./vendor/bin/phpunit

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:PHpuUx3tNLUkLE3O0BSULMrzvXJ0KHQ6uOSqKTtEdFM"  # Replace with your actual SSH key fingerprint from CircleCI
      - run:
          name: Setup SSH Key & Deploy
          command: |
            mkdir -p ~/.ssh
            echo "$AWS" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H $AWS_SERVER_IP >> ~/.ssh/known_hosts
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$AWS_SERVER_IP << 'EOF'
              echo "âœ… Connected to AWS EC2"

              # Ensure project directory exists
              mkdir -p /home/ubuntu/workspace
              cd /home/ubuntu/workspace || exit 1

              # Clone or pull latest code
              if [ ! -d ".git" ]; then
                git clone git@github.com:AymaneQualiso/laravel-circle-ci.git .
              else
                git reset --hard
                git pull origin main || true
              fi

              # Restart application (Modify as needed)
              sudo systemctl restart nginx php-fpm
            EOF

workflows:
  version: 2
  production_pipeline:
    jobs:
      - test-php
      - deploy:
          requires:
            - test-php
          filters:
            branches:
              only: main
